name: backend ci/cd

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@main
      - name: setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.100"
      - name: build
        run: dotnet build --configuration Release
        working-directory: backend
      - name: publish
        run: dotnet publish --configuration Release -r linux-x64 --self-contained false
        working-directory: backend
      - name: upload build artifacts
        uses: actions/upload-artifact@main
        with:
          name: backend-release
          path: backend/bin/Release/linux-x64/publish/

  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@main
      - name: setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.100"
      - name: run tests
        run: dotnet test --filter Category=unit,integration
        working-directory: backend

  code-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@main
      - name: initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: "csharp"
      - name: setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.100"
      - name: build
        run: dotnet build
        working-directory: backend
      - name: perform CodeQL code-analysis
        uses: github/codeql-action/analyze@v1

  docker:
    if: github.ref == 'refs/heads/main'
    needs: [build, test, code-analysis]
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@main
      - name: setup platform emulator
        uses: docker/setup-qemu-action@v1
      - name: setup multi-arch docker build
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1.9.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build & push images
        uses: docker/build-push-action@v2
        with:
          context: backend
          file: backend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: floriang89/fair-teams-ai:latest

  deploy:
    needs: [docker]
    runs-on: ubuntu-latest
    steps:
      - name: update deployed docker image
        run: curl -X POST -d 'token=${{ secrets.IMAGE_PULLER_TOKEN }}&restart_containers=true&image=floriang89/fair-teams-ai:latest' ${{ secrets.IMAGE_PULLER_URI }}
